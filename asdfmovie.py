__author__ = 'seamaster'

from glob import glob

#for file in glob("files/*"):
#    print(file)

from fractions import gcd
import threading

def coolstuff(n, huge_list, counter):
    for thingy in huge_list[counter:]:
        if n == thingy:
            continue
        gcdresult = gcd(thingy, n)
        if gcdresult != 1:
            print(gcdresult, n, thingy)

    print('Thread ended['+str(counter)+"]")

#huge_list = list()
#i = 1
#for file in glob("files/*"):
#    with open(file) as foo:
#        output = foo.read()
#    # ugly stuff
#    output = output.split("encrypted")[0][2:]
#    huge_list.append(int(output))
#
#
###########################################################
## I'VE GOT MY COOL FILES!
#
#
#for counter, n in enumerate(huge_list):
#    if counter < 2000:
#        continue
#    threading.Thread(target=coolstuff, args=(n, huge_list, counter)).start()
#    print(str(counter + 1) + "/" + str(len(huge_list)))

zahl1 = "94411733223408329382133158037163790542444846846237588800669469956095363765357730934881112049411254123920922190838444307250255142732585516688207447515408599581116991882364669243229002019328795373173040521072598151716223244770473235244943526093596413424286906986535811009153754627662686316876294300583601667051"
zahl2 = "94411733223408329382133158037163790542444846846237588800669469956095363765357730934881112049411254123920922190838444307250255142732585516688207447515408599581116991882364669243229002019328795373173040521072598151716223244770473235244943526093596413424286906986535811009153754627662686316876294300583601667051"

for file in glob("files/*"):
    if zahl1 in open(file).read():
        print("First!!!!")
        print(file)
    if zahl2 in open(file).read():
        print("second!!!!")
        print(file)


print("finished")

#import time
#time.sleep(100000)

def eugcd(a,b):
    m,n = a,b
    u1,u2 = 1,0
    v1,v2 = 0,1
    while n > 0:
        q = m/n
        r = m - (q*n)
        m,n = n,r
        u2,u1 = u1 - q*u2, u2
        v2,v1 = v1 - q*v2, v2
    return m
    #print('d = ' + str(m))
    #print('u = ' + str(u1))
    #print('v = ' + str(v1))

q = 9056212071187862601151022761778577358901924795209898618493938345153522964154002928314489736408399449262098373376611422361819546565652752596340096170594607
p = 10425079766382366420625494866767568875370400467976574956525983652357684133387986157895827317253539750222139144079507972326197750248804720295152321770469893
n = 94411733223408329382133158037163790542444846846237588800669469956095363765357730934881112049411254123920922190838444307250255142732585516688207447515408599581116991882364669243229002019328795373173040521072598151716223244770473235244943526093596413424286906986535811009153754627662686316876294300583601667051
d = 1440630704561048743146916274313935920385211670805486973383222246983983577712027633095004380093251760493185659431425105779358436602313046718367398298854178379489206596660344052288263881485962632194213433044922913432428866003866265251481762657763679735791369844342997709464546679032057249704789849823234311
c = 33334464568364444083285516673099409195512961971169898065756502353068653594957325818001842360909527958955397031462946380745713038434638478453511062628111984676999239434677468595686430817664349059287466377394535152470878184331901493711764116024264145575255149663345351624688683723546854319306416399999672769333
e = 65537
d = 1440586740671808739828389429439305896553776444546402624481887635321961087101297449301632849373807988219187973066183137880132675324360064035403015815728650687395290512414905282004232318738766820282401961252407390203918789898276938115199922422090464187940971096464872589373316853233530247942435613594849636

#counter = 0
#
#for i in range(1,n):
#
#    if eugcd(i+1, n) == 1:
#        counter += 1
#    if counter > 0 and counter // 100 == 0:
#        print(counter)
#exponent = d % counter
#plain = c ** exponent
#print(plain)

def decrypt(msg,d):
    return msg.__pow__(d,n)

print(decrypt(c, d))
plaintext = 43439141212783461731922244918506124749746423794779646318517195470463064474832289301151611490288024379570071985584658764616819512886580015507900533088655753297970144918641275011047941191182302171256016393796619352052478791136379347911723869939686158172763232745354105447856887158790356479871809843280478463653
hexplain = "%x" %plaintext
